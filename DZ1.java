
public class DZ1 {
    // ДЗ

    // Задача 1 - Методы с исключениями
    // Реализуйте 3 метода, чтобы в каждом из них получить разные исключения.
    // Метод arrayOutOfBoundsException - Ошибка, связанная с выходом за пределы массива
    // Метод divisionByZero - Деление на 0
    // Метод numberFormatException - Ошибка преобразования строки в число
    // Важно: они не должны принимать никаких аргументов

    public static void arrayOutOfBoundsException() {
        // Напишите свое решение ниже
      int[] array = new int[] {1, 0};
      System.out.println(array[10]);
    }

    public static void divisionByZero() {
        // Напишите свое решение ниже
      System.out.println(10 / 0);
    }

    public static void numberFormatException() {
        // Напишите свое решение ниже
      int number = Integer.parseInt("Число"); 
    }

    // Задача 2 - Разность двух массивов
    // Реализуйте метод subArrays, принимающий в качестве аргументов два целочисленных массива a и b, 
    // и возвращающий новый массив c, каждый элемент которого равен разности элементов двух входящих массивов в той же ячейке.
    // Если длины массивов не равны - верните нулевой массив длины 1.
    // Напишите свой код в методе subArrays класса Answer. Метод subArrays принимает на вход два параметра:
    // int[] a - первый массив
    // int[] b - второй массив

    // a = new int[]{4, 5, 6};
    // b = new int[]{1, 2, 3};
    // Вывод: [3, 3, 3]

    // a = new int[]{4, 5, 6};
    // b = new int[]{1, 2, 3, 5};
    // Вывод: [0]

    public int[] subArrays(int[] a, int[] b){
      // Введите свое решение ниже
       int[] c;
        if (a.length != b.length) {
          c = new int[]{0};
        } else {
          c = new int[a.length];
            for (int i = 0; i < a.length; i++) {
                c[i] = a[i] - b[i];
            }
        }
      return c;
    }

    // Задача 3 - Частное двух массивов
    // Реализуйте метод divArrays, принимающий в качестве аргументов два целочисленных массива a и b, и возвращающий новый массив с, 
    // каждый элемент которого равен частному элементов двух входящих массивов в той же ячейке.
    // Если длины массивов не равны - верните нулевой массив длины 1.
    // Важно: При выполнении метода единственное исключение, которое пользователь может увидеть - RuntimeException, т.е. ваше.
    // Напишите свой код в методе divArrays класса Answer. Метод divArrays принимает на вход два параметра:
    // int[] a - первый массив
    // int[] b - второй массив

    // a = new int[]{12, 8, 16};
    // b = new int[]{4, 2, 4};
    // Вывод: [3, 4, 4]

    // a = new int[]{12, 8, 16, 25};
    // b = new int[]{4, 2, 4};
    // Вывод: [0]

    public int[] divArrays(int[] a, int[] b){
      // Введите свое решение ниже
      int[] c;
        if (a.length != b.length) {
          c = new int[]{0};
          return c;
        } else {
          c = new int[a.length];
            for (int i = 0; i < a.length; i++) {
              if (b[i] == 0) {
                throw new RuntimeException();
              } else {
                c[i] = a[i] / b[i]; 
              }
            }
          return c;
        }
    }
}
